[
  {
    "key": "cmd+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+cmd+z",
    "command": "extension.switchTemplate"
  },
  {
    "key": "shift+alt+o",
    "command": "-extension.switchTemplate"
  },
  {
    "key": "ctrl+cmd+x",
    "command": "extension.switchTs"
  },
  {
    "key": "shift+alt+u",
    "command": "-extension.switchTs"
  },
  {
    "key": "ctrl+cmd+c",
    "command": "extension.switchStyle"
  },
  {
    "key": "shift+alt+i",
    "command": "-extension.switchStyle"
  },
  {
    "key": "ctrl+cmd+v",
    "command": "extension.switchSpec"
  },
  {
    "key": "shift+alt+p",
    "command": "-extension.switchSpec"
  },
  {
    "key": "shift+cmd+;",
    "command": "git.openChange"
  },
  {
    "key": "cmd+;",
    "command": "git.openFile"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "gitlens.copyRemoteFileUrlToClipboard"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+d",
    "command": "-extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
  },
  {
    "key": "ctrl+v",
    "command": "-extension.vim_ctrl+v",
    "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
  },
  {
    "key": "ctrl+i",
    "command": "-extension.vim_ctrl+i",
    "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+alt+s",
    "command": "workbench.action.files.saveAs"
  },
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveAs"
	},
  {
    "key": "ctrl+shift+s",
    "command": "saveAll"
  },
  {
    "key": "ctrl+k s",
    "command": "-saveAll"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+a",
    "command": "-extension.vim_ctrl+a",
    "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
  },
  {
		"command": "runCommands",
		"key": "ctrl+alt+shift+q",
		"args": {
			"commands": [
				"workbench.action.toggleMaximizedPanel",
				"workbench.action.focusActiveEditorGroup",
			]
		},
		"when": "terminalFocus"
	},
	{
		"command": "runCommands",
    "key": "ctrl+alt+shift+q",
		"args": {
			"commands": [
				"workbench.action.toggleMaximizedPanel",
				"workbench.action.terminal.focus"
			]
		},
		"when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "npm run build \u000D"
    }
  },
  {
    "key": "ctrl+shift+alt+d",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "npm run build:deploy:dev \u000D"
    }
  }
]